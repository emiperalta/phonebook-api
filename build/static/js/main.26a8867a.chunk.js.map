{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/phonebook.js","App.js","index.js"],"names":["Filter","handleChange","nameFilter","onChange","value","PersonForm","handleSubmit","handleChangeName","handleChangeNumber","newName","newNumber","onSubmit","type","Persons","handleDelete","person","name","number","onClick","id","REACT_APP_APIKEY","process","App","useState","persons","setPersons","setNewName","setNewNumber","setNameFilter","error","setError","message","setMessage","useEffect","fetch","then","res","json","allPersons","p","find","window","confirm","method","headers","deletePhone","personsUpd","filter","style","color","e","target","preventDefault","already_saved","body","JSON","stringify","updateNumber","updPerson","per","catch","setTimeout","addPhone","newPerson","toLocaleLowerCase","startsWith","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26a8867a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ handleChange, nameFilter }) => {\r\n  return (\r\n    <div>\r\n      filter shown with\r\n      <input onChange={handleChange} value={nameFilter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({\r\n  handleSubmit,\r\n  handleChangeName,\r\n  handleChangeNumber,\r\n  newName,\r\n  newNumber,\r\n}) => {\r\n  return (\r\n    <>\r\n      {' '}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          name: <input onChange={handleChangeName} value={newName} />\r\n        </div>\r\n        <div>\r\n          number: <input onChange={handleChangeNumber} value={newNumber} />\r\n        </div>\r\n        <div>\r\n          <button type='submit'>add</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Persons = ({ handleDelete, person }) => {\r\n  return (\r\n    <section key={person.name}>\r\n      {person.name} {person.number}{' '}\r\n      <button onClick={() => handleDelete(person.id)}>delete</button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","const { REACT_APP_APIKEY } = process.env;\r\n\r\nexport const getAll = () => {\r\n  return fetch(REACT_APP_APIKEY).then(res => res.json());\r\n};\r\n\r\nexport const addPhone = ({ name, number }) => {\r\n  return fetch(REACT_APP_APIKEY, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, number }),\r\n  }).then(res => res.json());\r\n};\r\n\r\nexport const deletePhone = id => {\r\n  return fetch(`${REACT_APP_APIKEY}/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateNumber = (id, { name, number }) => {\r\n  return fetch(`${REACT_APP_APIKEY}/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, number }),\r\n  }).then(res => res.json());\r\n};\r\n","import React, { useEffect, useState } from 'react';\n\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\n\nimport { getAll, addPhone, deletePhone, updateNumber } from './services/phonebook';\n\nfunction App() {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [nameFilter, setNameFilter] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    getAll().then(allPersons => setPersons(allPersons));\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const already_saved = persons.find(({ name }) => newName === name);\n    if (already_saved) {\n      const result = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n\n      result &&\n        updateNumber(already_saved.id, { name: newName, number: newNumber })\n          .then(updPerson => {\n            const p = persons.find(per => per.id === updPerson.id);\n            setPersons([...persons, (p.number = updPerson.number)]);\n          })\n          .catch(e => {\n            setError(\n              `Information of ${newName} has already been removed from server`\n            );\n            setTimeout(() => setError(''), 5000);\n          });\n    } else {\n      addPhone({ name: newName, number: newNumber }).then(newPerson => {\n        setPersons([...persons, newPerson]);\n        setMessage(`${newName} added`);\n        setTimeout(() => setMessage(''), 5000);\n      });\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n\n  const handleDelete = id => {\n    const p = persons.find(p => p.id === id);\n    const result = window.confirm(`Delete ${p.name}?`);\n    result &&\n      deletePhone(id).then(() => {\n        const personsCopy = [...persons];\n        const personsUpd = personsCopy.filter(p => p.id !== id);\n        setPersons(personsUpd);\n      });\n  };\n\n  const handleChangeName = e => setNewName(e.target.value);\n  const handleChangeNumber = e => setNewNumber(e.target.value);\n  const handleChangeFilter = e => setNameFilter(e.target.value);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {message && <p style={{ color: 'green' }}>{message}</p>}\n\n      <Filter handleChange={handleChangeFilter} nameFilter={nameFilter} />\n\n      <h2>add new</h2>\n\n      <PersonForm\n        handleSubmit={handleSubmit}\n        handleChangeName={handleChangeName}\n        handleChangeNumber={handleChangeNumber}\n        newName={newName}\n        newNumber={newNumber}\n      />\n\n      <h2>Numbers</h2>\n      {persons\n        .filter(\n          ({ name }) =>\n            name &&\n            name.toLocaleLowerCase().startsWith(nameFilter.toLocaleLowerCase())\n        )\n        .map(person => (\n          <Persons handleDelete={handleDelete} key={person.id} person={person} />\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}